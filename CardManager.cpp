//=======================================================================================
// CardManager.cpp
// カード管理関連のソースファイル
//=======================================================================================

// ヘッダファイルの読み込み ================================================
#include <iostream>
#include <vector>
#include "CardManager.h"
#include "Card.h"

using namespace std;

// 定数の定義 ==============================================================

//================================================================
// コンストラクタ
//================================================================
CardManager::CardManager()
{
	for (int i = 0; i < 13; i++)
	{
		m_list[i] = new Card(Card::SPADE, i);
		m_list[i+13] = new Card(Card::CLUB, i);
		m_list[i+26] = new Card(Card::DIAMOND, i);
		m_list[i+39] = new Card(Card::HEART, i);
	}
	CreateDeck();
}

//================================================================
// デストラクタ
//================================================================
CardManager::~CardManager()
{
	for (int i = 0; i < 52; i++)
	{
		delete m_list[i];
	}
}

//================================================================
// トランプデッキを構築
//================================================================
void CardManager::CreateDeck()
{
	for (int i = 0; i < 52; i++)
	{
		m_deck.push_back(m_list[i]);
	}
}

//================================================================
// トランプを表示する
//================================================================
void CardManager::ShowDeck()
{
	for each (Card* card in m_deck)
	{
		card->ShowCard();
	}
}

//================================================================
// トランプをシャッフルする
//================================================================
void CardManager::ShuffleCards()
{
	// n回シャッフルする
	for (int i = 0; i < 100; i++)
	{
		// 現在のデッキのサイズに合わせた乱数
		int randomNum = rand() % m_deck.size();

		// 乱数のカードを引き抜く
		Card* card = m_deck.at(randomNum);
		m_deck.erase(m_deck.begin() + randomNum);

		// 抜いたカードを一番上に乗せる
		m_deck.push_back(card);
	}
}

//================================================================
// トランプを１枚配る
//================================================================
Card* CardManager::DrawCard()
{
	Card* card = m_deck.back();
	m_deck.pop_back();
	return card;
}






